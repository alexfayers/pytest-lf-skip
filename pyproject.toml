[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling" ]

[project]
name = "pytest-lf-skip"
version = "0.1.1"
description = "A pytest plugin which makes `--last-failed` skip instead of deselect tests."
readme = "README.md"
authors = [ { name = "Alex Fayers", email = "alex@fayers.com" } ]
requires-python = ">=3.10"
classifiers = [
    "Framework :: Pytest",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [ "pytest>=8.3.5" ]

entry-points.pytest11.pytest_lf_skip = "pytest_lf_skip.plugin"

[dependency-groups]
dev = [
    "mypy>=1.15",
    "pre-commit>=4.2",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.5",
]

[tool.ruff]
line-length = 120

lint.select = [ "ALL" ]
lint.extend-ignore = [
    "D100",    # pydocstyle: Missing docstring in public module
    "D101",    # pydocstyle: Missing docstring in public class
    "D104",    # pydocstyle: Missing docstring in public package
    "D105",    # pydocstyle: Missing docstring in magic method
    "D107",    # pydocstyle: Missing docstring in `__init__`
    "FIX",     # flake8-fixme
    "PLC0414", # Pylint: Import alias does not rename original package
    "TD002",   # flake8-todos: Missing author in TODO
    "TD003",   # flake8-todos: Missing issue link for this TODO
    "UP040",   # pyupgrade: Type alias uses `TypeAlias` annotation instead of the `type` keyword
]

lint.extend-per-file-ignores."tests/*" = [
    "D103", # pydocstyle: Missing docstring in public function
    "S101", # flake8-bandit: Use of `assert` detected
]

lint.extend-safe-fixes = [
    "ANN",   # flake8-annotations
    "TC001", # flake8-type-checking: Move application import into a type-checking block
    "TC002", # flake8-type-checking: Move third-party import into a type-checking block
    "TC003", # flake8-type-checking: Move standard library import into a type-checking block
    "TC004", # flake8-type-checking: Move import out of type-checking block. Import is used for more than type hinting.
]

lint.flake8-annotations.allow-star-arg-any = true

lint.isort.combine-as-imports = true
lint.isort.force-sort-within-sections = true
lint.isort.force-wrap-aliases = true
lint.isort.required-imports = [ "from __future__ import annotations" ]

lint.pydocstyle.convention = "google"
lint.pydocstyle.ignore-var-parameters = true

[tool.codespell]
write-changes = true

[tool.pyproject-fmt]
indent = 4
max_supported_python = "3.13"

[tool.pytest.ini_options]
testpaths = [ "tests" ]
python_files = "test_*.py"

[tool.coverage]
report.skip_empty = true
run.branch = true
run.source = [ "src" ]

[tool.mypy]
files = [ "src", "tests" ]
python_version = "3.10"

warn_unused_configs = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
no_implicit_reexport = true
strict_equality = true
